(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{B7eD:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return i})),a.d(n,"default",(function(){return g}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var t=a("7ljp"),l=a("013z");a("qKvR");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var i={},s=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(t.b)("div",n)}},o=s("InlineNotification"),c=s("Tabs"),m=s("Tab"),b=s("Row"),p=s("Column"),u={_frontmatter:i},d=l.a;function g(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,["components"]);return Object(t.b)(d,r({},u,a,{components:n,mdxType:"MDXLayout"}),Object(t.b)("p",null,"When the Helm charts are uploaded to the repository, you can deploy the application by using one of the following commands:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"# Helm v2\nhelm install local-development/spm --name releasename\n\n# Helm v3 ('releasename' is mandatory for Helm v3)\nhelm install releasename local-development/spm\n")),Object(t.b)(o,{mdxType:"InlineNotification"},Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"Note"),": releasename should contain no capital letters.")),Object(t.b)("p",null,"Where ",Object(t.b)("inlineCode",{parentName:"p"},"releasename")," is the name of this Helm release. For example, MyRelease-1.0.\nIf you do not specify a name, Helm auto generates one. All the names of the Kubernetes objects are created with ",Object(t.b)("inlineCode",{parentName:"p"},"releasename-")," as prefix."),Object(t.b)("p",null,"The ",Object(t.b)("inlineCode",{parentName:"p"},"helm install")," command installs the Helm charts in the order in which they were loaded in the repository, with all the values defined in the files.\nHowever, as described in ",Object(t.b)("a",r({parentName:"p"},{href:"/spm-kubernetes/03-build-images/setup_docker_context"}),"Setting up the Docker® context"),", you can override the configuration value by running the following shell script:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"# Helm v2\nhelm install local-development/spm --name releasename -f override-values.yaml\n\n# Helm v3\nhelm install releasename local-development/spm -f override-values.yaml\n")),Object(t.b)("h3",null,"Sample ",Object(t.b)("inlineCode",{parentName:"h3"},"override-values.yaml")," files"),Object(t.b)("p",null,"Here are three sample override files for deploying."),Object(t.b)(o,{mdxType:"InlineNotification"},Object(t.b)("p",null,"While the Minikube configuration is sufficiently generic to be used almost as-is (given all images were built and pushed with the names outlined in the ",Object(t.b)("a",r({parentName:"p"},{href:"/spm-kubernetes/03-build-images/build_images"}),"Building Docker images")," section):"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"The IKS example requires IAM credentials for the ",Object(t.b)("a",r({parentName:"li"},{href:"https://cloud.ibm.com/docs/containers?topic=containers-registry"}),"IBM Container Registry")," (",Object(t.b)("inlineCode",{parentName:"li"},"global.imagePullSecret"),")"),Object(t.b)("li",{parentName:"ul"},"The ",Object(t.b)("a",r({parentName:"li"},{href:"https://cloud.ibm.com/docs/containers?topic=containers-ingress_annotation#alb-id"}),"Application Load Balancer IDs")," (",Object(t.b)("inlineCode",{parentName:"li"},'ingress.annotations."ingress.bluemix.net/ALB-ID"'),") to be updated."))),Object(t.b)(c,{mdxType:"Tabs"},Object(t.b)(m,{label:"Minikube",mdxType:"Tab"},Object(t.b)(b,{mdxType:"Row"},Object(t.b)(p,{mdxType:"Column"},Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-yaml",metastring:"path=minikube-values.yaml src=../../resources/minikube-values.yaml",path:"minikube-values.yaml",src:"../../resources/minikube-values.yaml"}),"---\nglobal:\n  license: '' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: minikube.local\n    imageLibrary: ''\n    imagePrefix: ''\n    imageTag: latest\n    pullPolicy: Always\n  ceApp:\n    imageLibrary: ''\n    imageName: ce-app\n    imageTag: latest\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\ningress:\n  enabled: true\n  tlsSecretName: testkube-tls\n  generateCert: true\n  hostname: minikube.local\n"))))),Object(t.b)(m,{label:"IBM Kubernetes Service",mdxType:"Tab"},Object(t.b)(b,{mdxType:"Row"},Object(t.b)(p,{mdxType:"Column"},Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-yaml",metastring:"path=iks-values.yaml src=../../resources/iks-values.yaml",path:"iks-values.yaml",src:"../../resources/iks-values.yaml"}),"---\nglobal:\n  license: '' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: us.icr.io\n    imageLibrary: foo-library\n    imagePrefix: test_\n    imageTag: latest\n    pullPolicy: Always\n  ceApp:\n    imageLibrary: foo-library\n    imageName: ce-app\n    imageTag: latest\n  imagePullSecret:\n    registry: us.icr.io\n    username: '' # IAM username for IBM Container Registry\n    password: '' # IAM API Key for IBM Container Registry\n  database:\n    initTime: 30\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\ningress:\n  annotations:\n    ingress.bluemix.net/ALB-ID: ''\n  enabled: true\n  hostname: spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud\n  tlsSecretName: default-us-icr-io\n"))))),Object(t.b)(m,{label:"CodeReady Containers",mdxType:"Tab"},Object(t.b)(b,{mdxType:"Row"},Object(t.b)(p,{mdxType:"Column"},Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-yaml",metastring:"path=crc-values.yaml src=../../resources/crc-values.yaml",path:"crc-values.yaml",src:"../../resources/crc-values.yaml"}),"---\nglobal:\n  license: 'accept' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: &imageRegistry image-registry.openshift-image-registry.svc:5000\n    imageLibrary: 'ocp'\n    imagePrefix: ''\n    imageTag: latest\n    pullPolicy: Always\n  imagePullSecret:\n    registry: *imageRegistry\n    username: kubeadmin\n    password:\n  database:\n    hostname: 192.168.0.32\n  ceApp:\n    imageLibrary: ''\n    imageName: ''\n    imageTag: latest\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\n  isam:\n    enabled: false\n  ingress:\n    enabled: true\n    tlsSecretName: testkube-tls\n    generateCert: true\n    hostname: spm-ocp.apps-crc.testing\n")))))),Object(t.b)(o,{mdxType:"InlineNotification"},Object(t.b)("p",null,"The above example of configuration for IKS will build up the full image name based on the ",Object(t.b)("inlineCode",{parentName:"p"},"registry"),", ",Object(t.b)("inlineCode",{parentName:"p"},"imageLibrary"),", ",Object(t.b)("inlineCode",{parentName:"p"},"imagePrefix"),", and ",Object(t.b)("inlineCode",{parentName:"p"},"imageTag")," options as follows: ",Object(t.b)("inlineCode",{parentName:"p"},"{registry}/{imageLibrary}/{imagePrefix}curam:{imageTag}")),Object(t.b)("p",null,"With the given values, the resulting image name will look like this: ",Object(t.b)("inlineCode",{parentName:"p"},"us.icr.io/foo-library/test_curam:latest"))),Object(t.b)("p",null,"The license agreements for the IBM® WebSphere® Liberty and IBM WebSphere MQ images must be accepted in order to proceed with the deployment of these elements. This can be done by setting the ",Object(t.b)("inlineCode",{parentName:"p"},"global.license")," property to ",Object(t.b)("inlineCode",{parentName:"p"},"accept"),"."),Object(t.b)("p",null,"The respective license agreements can be reviewed by running the following commands:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"# IBM WebSphere Liberty\ndocker run --rm -e LICENSE=view websphere-liberty:19.0.0.12-full-java8-ibmjava\n\n# IBM WebSphere MQ\ndocker run --rm -e LICENSE=view ibmcom/mq:9.1.3.0\n")),Object(t.b)("h2",null,"Status of the system"),Object(t.b)("p",null,"The ",Object(t.b)("inlineCode",{parentName:"p"},"helm install")," command shows all the Kubernetes objects and also runs the SPM containers. You can track the status of the SPM containers on real time by running the following command:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"kubectl get pods -w\n\nNAME                                              READY  STATUS    RESTARTS  AGE\nreleasename-apps-curam-consumer-595c8bf95f-zn2l5  0/1    Init 3/4  0         5m\nreleasename-apps-curam-producer-6b5569c4ff-nvxtd  1/1    Running   0         5m\nreleasename-apps-rest-consumer-85b4865b9d-wr6hj   0/1    Init 3/4  0         5m\nreleasename-apps-rest-producer-cd8fdbbbf-j2mjj    0/1    Init 3/4  0         5m\nreleasename-ce-app-7cdd64987-qx8l8                1/1    Running   0         5m\nreleasename-ihs-67697ffb8b-fdsk2                  1/1    Running   0         5m\nreleasename-mqserver-curam-7f45bcd64d-rlqns       1/1    Running   0         5m\nreleasename-mqserver-rest-544c5b4758-pnbpz        1/1    Running   0         5m\nreleasename-xmlserver-77d6d9b75d-4xr8k            1/1    Running   0         5m\n\n")),Object(t.b)("p",null,"The command lists the pods and their status, where each status change is on a new line."),Object(t.b)("p",null,"Some of the pods have initialization steps, so they are not shown until the steps are completed."),Object(t.b)("p",null,"The output of the ",Object(t.b)("inlineCode",{parentName:"p"},"kubectl get pods")," command provides the names of the pods that you can use to substitute for ",Object(t.b)("inlineCode",{parentName:"p"},"podname")," in the following example commands.\nFor example, the Liberty pod that contains SPM code is a name that uses a pattern of: ",Object(t.b)("inlineCode",{parentName:"p"},"releasename-apps-curam-"),"."),Object(t.b)("p",null,"You can also describe a pod by running the following command:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"kubectl describe pod/pod name\n")),Object(t.b)("p",null,"You can also read the log when the status is ",Object(t.b)("inlineCode",{parentName:"p"},"running"),", by running the following command:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-shell"}),"kubectl logs -f pod/podname\n")),Object(t.b)("h2",null,"Accessing the application"),Object(t.b)("p",null,"To access the application, a URL is provided to access the pod within the cluster. This access is provided using Ingress resources on Kubernetes, and Routes resources on OpenShift."),Object(t.b)("p",null,"Example URLs:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"Minikube: ",Object(t.b)("inlineCode",{parentName:"li"},"https://minikube.local/Curam")),Object(t.b)("li",{parentName:"ul"},"CRC: ",Object(t.b)("inlineCode",{parentName:"li"},"https://spm-ocp.apps-crc.testing/Curam")),Object(t.b)("li",{parentName:"ul"},"IKS: ",Object(t.b)("inlineCode",{parentName:"li"},"https://spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud/Curam"))))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-04-deployment-hc-deployment-mdx-81f5707c411d2208c383.js.map