{"version":3,"sources":["webpack:///./src/pages/04-deployment/hc_deployment.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","Tabs","Tab","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","isMDXComponent"],"mappings":"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","file":"component---src-pages-04-deployment-hc-deployment-mdx-81f5707c411d2208c383.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`When the Helm charts are uploaded to the repository, you can deploy the application by using one of the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v2\nhelm install local-development/spm --name releasename\n\n# Helm v3 ('releasename' is mandatory for Helm v3)\nhelm install releasename local-development/spm\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note`}</strong>{`: releasename should contain no capital letters.`}</p>\n    </InlineNotification>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`releasename`}</inlineCode>{` is the name of this Helm release. For example, MyRelease-1.0.\nIf you do not specify a name, Helm auto generates one. All the names of the Kubernetes objects are created with `}<inlineCode parentName=\"p\">{`releasename-`}</inlineCode>{` as prefix.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command installs the Helm charts in the order in which they were loaded in the repository, with all the values defined in the files.\nHowever, as described in `}<a parentName=\"p\" {...{\n        \"href\": \"/spm-kubernetes/03-build-images/setup_docker_context\"\n      }}>{`Setting up the DockerÂ® context`}</a>{`, you can override the configuration value by running the following shell script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Helm v2\nhelm install local-development/spm --name releasename -f override-values.yaml\n\n# Helm v3\nhelm install releasename local-development/spm -f override-values.yaml\n`}</code></pre>\n    <h3>{`Sample `}<inlineCode parentName=\"h3\">{`override-values.yaml`}</inlineCode>{` files`}</h3>\n    <p>{`Here are three sample override files for deploying.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`While the Minikube configuration is sufficiently generic to be used almost as-is (given all images were built and pushed with the names outlined in the `}<a parentName=\"p\" {...{\n          \"href\": \"/spm-kubernetes/03-build-images/build_images\"\n        }}>{`Building Docker images`}</a>{` section):`}</p>\n      <ul>\n        <li parentName=\"ul\">{`The IKS example requires IAM credentials for the `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-registry\"\n          }}>{`IBM Container Registry`}</a>{` (`}<inlineCode parentName=\"li\">{`global.imagePullSecret`}</inlineCode>{`)`}</li>\n        <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/containers?topic=containers-ingress_annotation#alb-id\"\n          }}>{`Application Load Balancer IDs`}</a>{` (`}<inlineCode parentName=\"li\">{`ingress.annotations.\"ingress.bluemix.net/ALB-ID\"`}</inlineCode>{`) to be updated.`}</li>\n      </ul>\n    </InlineNotification>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"Minikube\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-yaml\",\n                \"metastring\": \"path=minikube-values.yaml src=../../resources/minikube-values.yaml\",\n                \"path\": \"minikube-values.yaml\",\n                \"src\": \"../../resources/minikube-values.yaml\"\n              }}>{`---\nglobal:\n  license: '' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: minikube.local\n    imageLibrary: ''\n    imagePrefix: ''\n    imageTag: latest\n    pullPolicy: Always\n  ceApp:\n    imageLibrary: ''\n    imageName: ce-app\n    imageTag: latest\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\ningress:\n  enabled: true\n  tlsSecretName: testkube-tls\n  generateCert: true\n  hostname: minikube.local\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"IBM Kubernetes Service\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-yaml\",\n                \"metastring\": \"path=iks-values.yaml src=../../resources/iks-values.yaml\",\n                \"path\": \"iks-values.yaml\",\n                \"src\": \"../../resources/iks-values.yaml\"\n              }}>{`---\nglobal:\n  license: '' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: us.icr.io\n    imageLibrary: foo-library\n    imagePrefix: test_\n    imageTag: latest\n    pullPolicy: Always\n  ceApp:\n    imageLibrary: foo-library\n    imageName: ce-app\n    imageTag: latest\n  imagePullSecret:\n    registry: us.icr.io\n    username: '' # IAM username for IBM Container Registry\n    password: '' # IAM API Key for IBM Container Registry\n  database:\n    initTime: 30\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\ningress:\n  annotations:\n    ingress.bluemix.net/ALB-ID: ''\n  enabled: true\n  hostname: spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud\n  tlsSecretName: default-us-icr-io\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n      <Tab label=\"CodeReady Containers\" mdxType=\"Tab\">\n        <Row mdxType=\"Row\">\n          <Column mdxType=\"Column\">\n            <pre><code parentName=\"pre\" {...{\n                \"className\": \"language-yaml\",\n                \"metastring\": \"path=crc-values.yaml src=../../resources/crc-values.yaml\",\n                \"path\": \"crc-values.yaml\",\n                \"src\": \"../../resources/crc-values.yaml\"\n              }}>{`---\nglobal:\n  license: 'accept' # Set to 'accept' after reviewing all license agreements\n  images:\n    registry: &imageRegistry image-registry.openshift-image-registry.svc:5000\n    imageLibrary: 'ocp'\n    imagePrefix: ''\n    imageTag: latest\n    pullPolicy: Always\n  imagePullSecret:\n    registry: *imageRegistry\n    username: kubeadmin\n    password:\n  database:\n    hostname: 192.168.0.32\n  ceApp:\n    imageLibrary: ''\n    imageName: ''\n    imageTag: latest\n  apps:\n    common:\n      initialDelaySeconds: 60\n      security:\n        username: SYSTEM\n    config:\n      curam:\n        enabled: true\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 1\n            memory: 2Gi\n      rest:\n        enabled: false\n      citizenportal:\n        enabled: false\n      curamwebservices:\n        enabled: false\n      curambirtviewer:\n        enabled: false\n  isam:\n    enabled: false\n  ingress:\n    enabled: true\n    tlsSecretName: testkube-tls\n    generateCert: true\n    hostname: spm-ocp.apps-crc.testing\n`}</code></pre>\n          </Column>\n        </Row>\n      </Tab>\n    </Tabs>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`The above example of configuration for IKS will build up the full image name based on the `}<inlineCode parentName=\"p\">{`registry`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`imageLibrary`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`imagePrefix`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`imageTag`}</inlineCode>{` options as follows: `}<inlineCode parentName=\"p\">{`{registry}/{imageLibrary}/{imagePrefix}curam:{imageTag}`}</inlineCode></p>\n      <p>{`With the given values, the resulting image name will look like this: `}<inlineCode parentName=\"p\">{`us.icr.io/foo-library/test_curam:latest`}</inlineCode></p>\n    </InlineNotification>\n    <p>{`The license agreements for the IBMÂ® WebSphereÂ® Liberty and IBM WebSphere MQ images must be accepted in order to proceed with the deployment of these elements. This can be done by setting the `}<inlineCode parentName=\"p\">{`global.license`}</inlineCode>{` property to `}<inlineCode parentName=\"p\">{`accept`}</inlineCode>{`.`}</p>\n    <p>{`The respective license agreements can be reviewed by running the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# IBM WebSphere Liberty\ndocker run --rm -e LICENSE=view websphere-liberty:19.0.0.12-full-java8-ibmjava\n\n# IBM WebSphere MQ\ndocker run --rm -e LICENSE=view ibmcom/mq:9.1.3.0\n`}</code></pre>\n    <h2>{`Status of the system`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`helm install`}</inlineCode>{` command shows all the Kubernetes objects and also runs the SPM containers. You can track the status of the SPM containers on real time by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get pods -w\n\nNAME                                              READY  STATUS    RESTARTS  AGE\nreleasename-apps-curam-consumer-595c8bf95f-zn2l5  0/1    Init 3/4  0         5m\nreleasename-apps-curam-producer-6b5569c4ff-nvxtd  1/1    Running   0         5m\nreleasename-apps-rest-consumer-85b4865b9d-wr6hj   0/1    Init 3/4  0         5m\nreleasename-apps-rest-producer-cd8fdbbbf-j2mjj    0/1    Init 3/4  0         5m\nreleasename-ce-app-7cdd64987-qx8l8                1/1    Running   0         5m\nreleasename-ihs-67697ffb8b-fdsk2                  1/1    Running   0         5m\nreleasename-mqserver-curam-7f45bcd64d-rlqns       1/1    Running   0         5m\nreleasename-mqserver-rest-544c5b4758-pnbpz        1/1    Running   0         5m\nreleasename-xmlserver-77d6d9b75d-4xr8k            1/1    Running   0         5m\n\n`}</code></pre>\n    <p>{`The command lists the pods and their status, where each status change is on a new line.`}</p>\n    <p>{`Some of the pods have initialization steps, so they are not shown until the steps are completed.`}</p>\n    <p>{`The output of the `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` command provides the names of the pods that you can use to substitute for `}<inlineCode parentName=\"p\">{`podname`}</inlineCode>{` in the following example commands.\nFor example, the Liberty pod that contains SPM code is a name that uses a pattern of: `}<inlineCode parentName=\"p\">{`releasename-apps-curam-`}</inlineCode>{`.`}</p>\n    <p>{`You can also describe a pod by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl describe pod/pod name\n`}</code></pre>\n    <p>{`You can also read the log when the status is `}<inlineCode parentName=\"p\">{`running`}</inlineCode>{`, by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl logs -f pod/podname\n`}</code></pre>\n    <h2>{`Accessing the application`}</h2>\n    <p>{`To access the application, a URL is provided to access the pod within the cluster. This access is provided using Ingress resources on Kubernetes, and Routes resources on OpenShift.`}</p>\n    <p>{`Example URLs:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Minikube: `}<inlineCode parentName=\"li\">{`https://minikube.local/Curam`}</inlineCode></li>\n      <li parentName=\"ul\">{`CRC: `}<inlineCode parentName=\"li\">{`https://spm-ocp.apps-crc.testing/Curam`}</inlineCode></li>\n      <li parentName=\"ul\">{`IKS: `}<inlineCode parentName=\"li\">{`https://spm.<cluster_name>-<hash>-0000.<region>.containers.appdomain.cloud/Curam`}</inlineCode></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}