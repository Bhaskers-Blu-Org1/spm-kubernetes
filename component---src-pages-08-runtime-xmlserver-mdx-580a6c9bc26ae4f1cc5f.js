(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{OPjZ:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return p}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var r=t("7ljp"),o=t("013z");t("qKvR");function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var c={},l={_frontmatter:c},i=o.a;function p(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(r.b)(i,a({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"As shown in ",Object(r.b)("a",a({parentName:"p"},{href:"/spm-kubernetes/00-intro/deploy-arch"}),"Deployment architecture")," a single pod for our XML server created."),Object(r.b)("p",null,"To verify the service name, run the following command:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-shell"}),"kubectl get services\n")),Object(r.b)("p",null,"The XML server is listed with the name: ",Object(r.b)("inlineCode",{parentName:"p"},"releasename-xmlserver")," where ",Object(r.b)("inlineCode",{parentName:"p"},"releasename")," was defined during deployment."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-08-runtime-xmlserver-mdx-580a6c9bc26ae4f1cc5f.js.map