{"componentChunkName":"component---src-pages-01-prereq-docker-kubernetes-helm-mdx","path":"/01-prereq/Docker-Kubernetes-Helm/","result":{"pageContext":{"frontmatter":{"title":"Docker速, Kubernetes, Minikube, and Helm","description":"Docker, Kubernetes, Minikube, and Helm"},"relativePagePath":"/01-prereq/Docker-Kubernetes-Helm.mdx","titleType":"page","MdxNode":{"id":"f7fed97d-3820-59c4-9ba1-28a697becaab","children":[],"parent":"9714f4f6-277e-5faa-9167-1c94dfcfd971","internal":{"content":"---\ntitle: Docker速, Kubernetes, Minikube, and Helm\ndescription: Docker, Kubernetes, Minikube, and Helm\n---\n\n## Docker\n\n[Docker](https://www.docker.com/get-started) is an open source tool that creates, deploys, and runs applications by using containers.\nInstall Docker by following the instructions in [docker.com](https://docs.docker.com/install/overview/). You can follow this runbook by using any Docker edition, including the community edition.\n\n<InlineNotification>\n\n**Note:** The following Docker versions were used to verify this runbook:\n\n* Docker Engine: 19.03.5\n* Docker Desktop for Windows: 2.1.0.5\n* Docker Desktop for Mac: 2.2.0.3\n\n</InlineNotification>\n\n## Kubernetes and Minikube\n\nKubernetes (which is also referred to as \"K8s\" and is described at a high-level on the [Kubernetes home page](https://kubernetes.io/)) is an open source system for automating deployment, scaling, and management of containerized applications.\nYou will use the command-line tool, `kubectl`, extensively when you follow the steps that are described in this runbook. The `kubectl` download and installation steps are described on [kubernetes.io](https://kubernetes.io/docs/tasks/tools/install-kubectl/).\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop. See [next page](/01-prereq/minikube) for Minikube configuration details for SPM.\n\n<InlineNotification>\n\n**Note:** The following versions were used to verify this runbook:\n\n* kubectl: 1.16.7\n  * **Important**: Take note of the version used. This will be required when creating a new Minikube environment.\n* Minikube: 1.7.3\n\n</InlineNotification>\n\n## Helm V2\n\n<InlineNotification>\n\n**Note:** The Helm version used to verify this runbook is 2.16.1. All the Helm commands that are used in this runbook are based on Helm version 2.\n\n</InlineNotification>\n\n[Helm](https://helm.sh/) is a package manager that helps you to find, share, and use software that is built for Kubernetes.\nHelm streamlines the installation and management of Kubernetes applications, and is the equivalent of the apt, yum, or homebrew utilities for Kubernetes.\n\nHelm uses a packaging format called Chart. A chart is a collection of files that describe a related set of Kubernetes resources.\nA single chart might be used to deploy something simple, like a memcached pod, or a complex deployment, like a full web app stack with HTTP servers, databases, and caches.\nCharts are created as files laid out in a particular directory tree, then they can be packaged into versioned archives for deployment. For more information, see the [Helm documentation](https://helm.sh/docs/).\n\nThis runbook uses Helm Charts and describes how to package and deploy them. For more information, see [Preparing Helm Charts](/04-deployment/hc_preparation).\n\nThe server portion of Helm, named Tiller, runs inside your Kubernetes cluster.\nTiller interacts directly with the Kubernetes API server to install, upgrade, query, and remove Kubernetes resources. It also stores the objects that represent releases.\n\nInstall Helm by following the steps described in [Helm install](https://github.com/helm/helm#install).\n","type":"Mdx","contentDigest":"6011370915ff6b9fb54ee212b46b6179","counter":118,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Docker速, Kubernetes, Minikube, and Helm","description":"Docker, Kubernetes, Minikube, and Helm"},"exports":{},"rawBody":"---\ntitle: Docker速, Kubernetes, Minikube, and Helm\ndescription: Docker, Kubernetes, Minikube, and Helm\n---\n\n## Docker\n\n[Docker](https://www.docker.com/get-started) is an open source tool that creates, deploys, and runs applications by using containers.\nInstall Docker by following the instructions in [docker.com](https://docs.docker.com/install/overview/). You can follow this runbook by using any Docker edition, including the community edition.\n\n<InlineNotification>\n\n**Note:** The following Docker versions were used to verify this runbook:\n\n* Docker Engine: 19.03.5\n* Docker Desktop for Windows: 2.1.0.5\n* Docker Desktop for Mac: 2.2.0.3\n\n</InlineNotification>\n\n## Kubernetes and Minikube\n\nKubernetes (which is also referred to as \"K8s\" and is described at a high-level on the [Kubernetes home page](https://kubernetes.io/)) is an open source system for automating deployment, scaling, and management of containerized applications.\nYou will use the command-line tool, `kubectl`, extensively when you follow the steps that are described in this runbook. The `kubectl` download and installation steps are described on [kubernetes.io](https://kubernetes.io/docs/tasks/tools/install-kubectl/).\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop. See [next page](/01-prereq/minikube) for Minikube configuration details for SPM.\n\n<InlineNotification>\n\n**Note:** The following versions were used to verify this runbook:\n\n* kubectl: 1.16.7\n  * **Important**: Take note of the version used. This will be required when creating a new Minikube environment.\n* Minikube: 1.7.3\n\n</InlineNotification>\n\n## Helm V2\n\n<InlineNotification>\n\n**Note:** The Helm version used to verify this runbook is 2.16.1. All the Helm commands that are used in this runbook are based on Helm version 2.\n\n</InlineNotification>\n\n[Helm](https://helm.sh/) is a package manager that helps you to find, share, and use software that is built for Kubernetes.\nHelm streamlines the installation and management of Kubernetes applications, and is the equivalent of the apt, yum, or homebrew utilities for Kubernetes.\n\nHelm uses a packaging format called Chart. A chart is a collection of files that describe a related set of Kubernetes resources.\nA single chart might be used to deploy something simple, like a memcached pod, or a complex deployment, like a full web app stack with HTTP servers, databases, and caches.\nCharts are created as files laid out in a particular directory tree, then they can be packaged into versioned archives for deployment. For more information, see the [Helm documentation](https://helm.sh/docs/).\n\nThis runbook uses Helm Charts and describes how to package and deploy them. For more information, see [Preparing Helm Charts](/04-deployment/hc_preparation).\n\nThe server portion of Helm, named Tiller, runs inside your Kubernetes cluster.\nTiller interacts directly with the Kubernetes API server to install, upgrade, query, and remove Kubernetes resources. It also stores the objects that represent releases.\n\nInstall Helm by following the steps described in [Helm install](https://github.com/helm/helm#install).\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/01-prereq/Docker-Kubernetes-Helm.mdx"}}}}