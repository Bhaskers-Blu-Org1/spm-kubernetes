{"componentChunkName":"component---src-pages-04-deployment-hc-preparation-mdx","path":"/04-deployment/hc_preparation/","result":{"pageContext":{"frontmatter":{"title":"Preparing Helm charts","description":"Preparing Helm charts"},"relativePagePath":"/04-deployment/hc_preparation.mdx","titleType":"page","MdxNode":{"id":"58a254f5-5905-532a-b753-39fc220320c9","children":[],"parent":"6f783da7-ec30-5c50-b2d6-240c6b53ed7d","internal":{"content":"---\ntitle: Preparing Helm charts\ndescription: Preparing Helm charts\n---\n\nThe [spm-kubernetes](https://github.com/IBM/spm-kubernetes) repository provides nine Helm charts:\n\n* *apps:* defines how to deploy the IBM速 WebSphere速 Liberty images with the SPM application.\n* *batch:* defines the batch image configuration.\n* *ce-app:* defines how to deploy the Universal Access (React) application.\n* *configmaps:* contains a group of common configurations across multiple images.\n* *ihs:* defines how to deploy the static content image for SPM (`Curam` image only).\n* *mqserver:* defines the IBM WebSphere MQ image configuration.\n* *openldap:* defines the OpenLDAP image configuration (used for session failover).\n* *xmlserver:* defines the xmlserver container configuration.\n* *spm:* an umbrella chart to contain all the other charts.\n\nThe charts use a templating mechanism to create the YAML file that is used by Kubernetes.\nFor this reason, the main configuration values are stored for each chart in a `values.yaml` file in the main folder of the charts.\nThe values can also be overwritten by the `spm:*` umbrella chart or by a provided override file during deployment as described in [Deploying Helm charts](/04-deployment/hc_deployment).\n\nYAML is a human-readable structured data format. It provides powerful configuration settings, without having to learn a more complex code type like CSS, JavaScript, or PHP.\n\n## Preparing to run the Helm charts\n\nBefore you run the charts, you must configure the database, configure IBM MQ, and test the charts.\n\n### Configuring the database\n\nUpdate the Helm charts to point to the database that you installed in\n[Install Prerequisite Software](/01-prereq/prereq).\nThe following values are provided in the  `values.yaml` files and must be modified before deployment to reflect your local environment:\n\n```\nglobal:\n  database:\n    type: \"DB2\"\n    hostname: \"dbhostname\"\n    dbName: \"dbName\"\n    serviceName: \"\"\n    username: \"dbuser\"\n    spm_psw: \"spmEncryptedDBPassword\"\n    wlp_psw: \"xorEncodedDBPassword\"\n    port: 50000\n```\n\n<InlineNotification>\n\n**Note:** To use an Oracle database, two changes are required:\n\n* Change the `global.database.type` property value to `ORA`\n* Set the `serviceName` property (corresponds to the `curam.db.oracle.servicename` property in Bootstrap.properties)\n\n</InlineNotification>\n\nAll of the above values are required for a successful deployment.\n\n`global.database.spm_psw` is equavalent to the `curam.db.password` property in `Bootstrap.properties`.\nThe value can be obtained by running `./build.sh encrypt -Dpassword=<password>` from any SPM installation.\n\n`global.database.wlp_psw` is the WebSphere Liberty WebSphere `{xor}` encoding of the database password. The value can be obtained by using `$WLP_HOME/bin/securityUtility encode <password>`.\n\nWhile it is possible to update the values directly in the `spm` chart, it is advisable to maintain a separate YAML file with values specific to your environment.\nThe YAML file will be used by the `helm install` command that is described in [Deploying Helm charts](/04-deployment/hc_deployment).\n\n<InlineNotification>\n\nSPM's Helm charts follow the parent chart/subcharts model, and therefore the values must be within the `global:` mapping to be applied globally.\n\nYou can find the full list of values available to override in `$SPM_HOME/helm-charts/spm/values.yaml`\n\n</InlineNotification>\n\n### Configuring IBM MQ\n\nIBM MQ is already configured to work out of the box with a secure connection with IBM WebSphere Liberty.\nThe commands that create all the objects that are needed on the queue manager are defined in a config map, in the `configmap-mqsc.yaml` file.\nHowever, there is a default password that you must change, as in the case of the database.\nThe password is in the `$SPM_HOME/helm-charts/mqserver/values.yaml` file under the name `adminPasswordKey`. The password allows access to the IBM MQ web console.\n\nPasswords can also be stored in secrets, as for the certificates. However, for the scope of this runbook, passwords can be configured in values files or, preferably, overwritten at runtime.\n\n### Linting the Helm charts\n\nUse the following command during development to verify the syntax and correctness of the generated YAML files. Run the command inside a Chart folder:\n\n```shell\ncd $SPM_HOME/helm-charts/spm\nhelm lint .\n```\n\n### Configuring Batch heap size\n\nThe heap size of the batch processing can be adjusted by specifying the `heapSize` property within the values override file. The defaults are currently:\n\n```\nbatch:\n javaMetrics:\n     heapSize: \"-Xms512m -Xmx512m\"\n```\n\n## Packaging the Helm charts\n\nTo use the Helm Charts to install SPM, package the charts and load them into a repository. For more information, see [ChartMuseum](/01-prereq/chartmuseum).\n\nTo publish the individual charts to the Chart museum repository, run the following commands from the helm-charts folder. The commands also use the `$SPM_HOME` value that is defined in [Install prerequisite software](/01-prereq/git):\n\n```shell\ncd $SPM_HOME/helm-charts\nhelm push apps local-development\nhelm push mqserver local-development\nhelm push configmaps local-development\nhelm push xmlserver local-development\nhelm push batch local-development\nhelm push ihs local-development\nhelm push ce-app local-development\nhelm push openldap local-development\nhelm repo update\n```\n\n<InlineNotification>\n\n**Note:** Kubernetes by default has limits set on resources such as memory and CPU usage. SPM containers require more resources than the default values that we have set.\nWe have set the default resource values to the limits that we have found to work best during development.\n\n_The resource values are subject to change during further iterations._\n\nThe resource values can be changed. However, for troubleshooting, we will request that our default values are used at a minimum.\n\n</InlineNotification>\n\nTo generate the umbrella chart that is used for the deployment, run the following commands:\n\n```shell\ncd $SPM_HOME/helm-charts\nhelm dep up spm/\nhelm push spm local-development\nhelm repo update\n```\n","type":"Mdx","contentDigest":"f71b7c2615788b261c1c6b674ea1013c","counter":131,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Preparing Helm charts","description":"Preparing Helm charts"},"exports":{},"rawBody":"---\ntitle: Preparing Helm charts\ndescription: Preparing Helm charts\n---\n\nThe [spm-kubernetes](https://github.com/IBM/spm-kubernetes) repository provides nine Helm charts:\n\n* *apps:* defines how to deploy the IBM速 WebSphere速 Liberty images with the SPM application.\n* *batch:* defines the batch image configuration.\n* *ce-app:* defines how to deploy the Universal Access (React) application.\n* *configmaps:* contains a group of common configurations across multiple images.\n* *ihs:* defines how to deploy the static content image for SPM (`Curam` image only).\n* *mqserver:* defines the IBM WebSphere MQ image configuration.\n* *openldap:* defines the OpenLDAP image configuration (used for session failover).\n* *xmlserver:* defines the xmlserver container configuration.\n* *spm:* an umbrella chart to contain all the other charts.\n\nThe charts use a templating mechanism to create the YAML file that is used by Kubernetes.\nFor this reason, the main configuration values are stored for each chart in a `values.yaml` file in the main folder of the charts.\nThe values can also be overwritten by the `spm:*` umbrella chart or by a provided override file during deployment as described in [Deploying Helm charts](/04-deployment/hc_deployment).\n\nYAML is a human-readable structured data format. It provides powerful configuration settings, without having to learn a more complex code type like CSS, JavaScript, or PHP.\n\n## Preparing to run the Helm charts\n\nBefore you run the charts, you must configure the database, configure IBM MQ, and test the charts.\n\n### Configuring the database\n\nUpdate the Helm charts to point to the database that you installed in\n[Install Prerequisite Software](/01-prereq/prereq).\nThe following values are provided in the  `values.yaml` files and must be modified before deployment to reflect your local environment:\n\n```\nglobal:\n  database:\n    type: \"DB2\"\n    hostname: \"dbhostname\"\n    dbName: \"dbName\"\n    serviceName: \"\"\n    username: \"dbuser\"\n    spm_psw: \"spmEncryptedDBPassword\"\n    wlp_psw: \"xorEncodedDBPassword\"\n    port: 50000\n```\n\n<InlineNotification>\n\n**Note:** To use an Oracle database, two changes are required:\n\n* Change the `global.database.type` property value to `ORA`\n* Set the `serviceName` property (corresponds to the `curam.db.oracle.servicename` property in Bootstrap.properties)\n\n</InlineNotification>\n\nAll of the above values are required for a successful deployment.\n\n`global.database.spm_psw` is equavalent to the `curam.db.password` property in `Bootstrap.properties`.\nThe value can be obtained by running `./build.sh encrypt -Dpassword=<password>` from any SPM installation.\n\n`global.database.wlp_psw` is the WebSphere Liberty WebSphere `{xor}` encoding of the database password. The value can be obtained by using `$WLP_HOME/bin/securityUtility encode <password>`.\n\nWhile it is possible to update the values directly in the `spm` chart, it is advisable to maintain a separate YAML file with values specific to your environment.\nThe YAML file will be used by the `helm install` command that is described in [Deploying Helm charts](/04-deployment/hc_deployment).\n\n<InlineNotification>\n\nSPM's Helm charts follow the parent chart/subcharts model, and therefore the values must be within the `global:` mapping to be applied globally.\n\nYou can find the full list of values available to override in `$SPM_HOME/helm-charts/spm/values.yaml`\n\n</InlineNotification>\n\n### Configuring IBM MQ\n\nIBM MQ is already configured to work out of the box with a secure connection with IBM WebSphere Liberty.\nThe commands that create all the objects that are needed on the queue manager are defined in a config map, in the `configmap-mqsc.yaml` file.\nHowever, there is a default password that you must change, as in the case of the database.\nThe password is in the `$SPM_HOME/helm-charts/mqserver/values.yaml` file under the name `adminPasswordKey`. The password allows access to the IBM MQ web console.\n\nPasswords can also be stored in secrets, as for the certificates. However, for the scope of this runbook, passwords can be configured in values files or, preferably, overwritten at runtime.\n\n### Linting the Helm charts\n\nUse the following command during development to verify the syntax and correctness of the generated YAML files. Run the command inside a Chart folder:\n\n```shell\ncd $SPM_HOME/helm-charts/spm\nhelm lint .\n```\n\n### Configuring Batch heap size\n\nThe heap size of the batch processing can be adjusted by specifying the `heapSize` property within the values override file. The defaults are currently:\n\n```\nbatch:\n javaMetrics:\n     heapSize: \"-Xms512m -Xmx512m\"\n```\n\n## Packaging the Helm charts\n\nTo use the Helm Charts to install SPM, package the charts and load them into a repository. For more information, see [ChartMuseum](/01-prereq/chartmuseum).\n\nTo publish the individual charts to the Chart museum repository, run the following commands from the helm-charts folder. The commands also use the `$SPM_HOME` value that is defined in [Install prerequisite software](/01-prereq/git):\n\n```shell\ncd $SPM_HOME/helm-charts\nhelm push apps local-development\nhelm push mqserver local-development\nhelm push configmaps local-development\nhelm push xmlserver local-development\nhelm push batch local-development\nhelm push ihs local-development\nhelm push ce-app local-development\nhelm push openldap local-development\nhelm repo update\n```\n\n<InlineNotification>\n\n**Note:** Kubernetes by default has limits set on resources such as memory and CPU usage. SPM containers require more resources than the default values that we have set.\nWe have set the default resource values to the limits that we have found to work best during development.\n\n_The resource values are subject to change during further iterations._\n\nThe resource values can be changed. However, for troubleshooting, we will request that our default values are used at a minimum.\n\n</InlineNotification>\n\nTo generate the umbrella chart that is used for the deployment, run the following commands:\n\n```shell\ncd $SPM_HOME/helm-charts\nhelm dep up spm/\nhelm push spm local-development\nhelm repo update\n```\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/04-deployment/hc_preparation.mdx"}}}}